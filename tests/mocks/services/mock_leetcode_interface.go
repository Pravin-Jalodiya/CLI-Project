// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Projects-WG\CLI-Project\external\domain\interfaces\leetcode_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "cli-project/internal/domain/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLeetcodeAPI is a mock of LeetcodeAPI interface.
type MockLeetcodeAPI struct {
	ctrl     *gomock.Controller
	recorder *MockLeetcodeAPIMockRecorder
}

// MockLeetcodeAPIMockRecorder is the mock recorder for MockLeetcodeAPI.
type MockLeetcodeAPIMockRecorder struct {
	mock *MockLeetcodeAPI
}

// NewMockLeetcodeAPI creates a new mock instance.
func NewMockLeetcodeAPI(ctrl *gomock.Controller) *MockLeetcodeAPI {
	mock := &MockLeetcodeAPI{ctrl: ctrl}
	mock.recorder = &MockLeetcodeAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLeetcodeAPI) EXPECT() *MockLeetcodeAPIMockRecorder {
	return m.recorder
}

// GetStats mocks base method.
func (m *MockLeetcodeAPI) GetStats(leetcodeID string) (*models.LeetcodeStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats", leetcodeID)
	ret0, _ := ret[0].(*models.LeetcodeStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStats indicates an expected call of GetStats.
func (mr *MockLeetcodeAPIMockRecorder) GetStats(leetcodeID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockLeetcodeAPI)(nil).GetStats), leetcodeID)
}

// ValidateUsername mocks base method.
func (m *MockLeetcodeAPI) ValidateUsername(username string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateUsername", username)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateUsername indicates an expected call of ValidateUsername.
func (mr *MockLeetcodeAPIMockRecorder) ValidateUsername(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateUsername", reflect.TypeOf((*MockLeetcodeAPI)(nil).ValidateUsername), username)
}
